.box-block {
  border: 1px solid red;
}



.hello[data-v-0de2627e] {
    border: 1px solid red;
}


.btn-counter[data-v-2ba5f020] {
  font-size: 24px;
  padding: 0.375rem 30px;
}



figure.figure[data-v-71b7b425] {
  transition: opacity 0.2s ease-in;
}
.dimmed[data-v-71b7b425] {
  opacity: 0.5;
}



.slides-wrapper[data-v-8a8f8bbc] {
  min-height: 300px;
  position: relative;
}
.slides-next[data-v-8a8f8bbc],
.slides-prev[data-v-8a8f8bbc] {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}
.slides-prev[data-v-8a8f8bbc] {
  left: 0;
}
.slides-next[data-v-8a8f8bbc] {
  right: 0;
}



.hello[data-v-4c8644c8] {
    border: 1px solid blue;
}


h3[data-v-0bd331d9] {
    margin-bottom: 50px;
}


.slide-enter-active[data-v-dfe8c0d6],
.slide-leave-active[data-v-dfe8c0d6] {
  transition: transform 0.5s ease-in-out;
}
.slide-enter[data-v-dfe8c0d6] {
  transform: translateX(-100vw);
}
.slide-leave-to[data-v-dfe8c0d6] {
  transform: translateX(100vw);
}



/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hc3NldHMvY3NzL2Fzc2V0cy9jc3MvaG9tZS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9jc3MvaG9tZS5zY3NzIiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy9jb21wb25lbnRzL2Fzc2V0cy9qcy9jb21wb25lbnRzL0hlbGxvV29ybGQudnVlIiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy9lZHUtY29tcG9uZW50cy9FZHVDb3VudGVyLnZ1ZSIsIndlYnBhY2s6Ly8vLi9hc3NldHMvanMvZWR1LWNvbXBvbmVudHMvRWR1U2xpZGUudnVlIiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy9lZHUtY29tcG9uZW50cy9FZHVTbGlkZXNob3cudnVlIiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy9lZHUtY29tcG9uZW50cy9hc3NldHMvanMvZWR1LWNvbXBvbmVudHMvRWR1SGVsbG9Xb3JsZC52dWUiLCJ3ZWJwYWNrOi8vLy4vYXNzZXRzL2pzL2VkdS1jb21wb25lbnRzL2Fzc2V0cy9qcy9lZHUtY29tcG9uZW50cy9FZHVIZWFkaW5nR3JvdXAudnVlIiwid2VicGFjazovLy8uL2Fzc2V0cy9qcy9lZHUtY29tcG9uZW50cy9FZHVBcHAudnVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNDO0VBQ0M7Q0NBRDs7OztBQ2lCRDtJQUNBO0NBQ0E7OztBQytDSTtFQUNJO0VBQ0E7Q0FuRVA7Ozs7QUNhRDtFQUNDO0NBZkE7QUFpQkQ7RUFDQztDQWRBOzs7O0FDdUZHO0VBQ0k7RUFDQTtDQTVGUDtBQThGRzs7RUFFSTtFQUNBO0VBQ0E7Q0EzRlA7QUE2Rkc7RUFDSTtDQTFGUDtBQTZGRztFQUNJO0NBMUZQOzs7O0FDQ0Q7SUFDQTtDQUNBOzs7QUNSQTtJQUNBO0NBQ0E7OztBQ1lBOztFQUVJO0NBMUJIO0FBNEJEO0VBQ0k7Q0F6Qkg7QUEyQkQ7RUFDSTtDQXhCSCIsImZpbGUiOiJqcy9ob21lLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ib3gge1xuXHQmLWJsb2NrIHtcblx0XHRib3JkZXI6IDFweCBzb2xpZCByZWQ7XG5cdH1cbn0iLCIuYm94LWJsb2NrIHtcbiAgYm9yZGVyOiAxcHggc29saWQgcmVkO1xufVxuXG4iLCI8dGVtcGxhdGU+XG4gICAgPGRpdiBjbGFzcz1cImhlbGxvXCI+XG4gICAgICAgIDxoMj57eyBtc2cgfX08L2gyPlxuICAgIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnSGVsbG9Xb3JsZCcsXG4gICAgZGF0YSAoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtc2c6ICdXZWxjb21lIHRvIFlvdXIgVnVlLmpzIEFwcCdcbiAgICAgICAgfVxuICAgIH1cbn07XG48L3NjcmlwdD5cblxuPCEtLSBBZGQgXCJzY29wZWRcIiBhdHRyaWJ1dGUgdG8gbGltaXQgQ1NTIHRvIHRoaXMgY29tcG9uZW50IG9ubHkgLS0+XG48c3R5bGUgc2NvcGVkPlxuICAgIC5oZWxsbyB7XG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHJlZDtcbiAgICB9XG48L3N0eWxlPlxuIiwiXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4uYnRuIHtcbiAgICAmLWNvdW50ZXIge1xuICAgICAgICBmb250LXNpemU6IDI0cHg7XG4gICAgICAgIHBhZGRpbmc6IDAuMzc1cmVtIDMwcHg7XG4gICAgfVxufVxuIiwiXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5maWd1cmUuZmlndXJlIHtcblx0dHJhbnNpdGlvbjogb3BhY2l0eSAwLjJzIGVhc2UtaW47XG59XG4uZGltbWVkIHtcblx0b3BhY2l0eTogMC41O1xufVxuIiwiXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi5zbGlkZXMge1xuICAgICYtd3JhcHBlciB7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDMwMHB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuICAgICYtbmV4dCxcbiAgICAmLXByZXYge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogNTAlO1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XG4gICAgfVxuICAgICYtcHJldiB7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgfVxuXG4gICAgJi1uZXh0IHtcbiAgICAgICAgcmlnaHQ6IDA7XG4gICAgfVxufVxuIiwiPHRlbXBsYXRlPlxuICAgIDxkaXYgY2xhc3M9XCJoZWxsb1wiPlxuICAgICAgICA8aDI+e3sgbXNnIH19PC9oMj5cbiAgICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG5cbjxzY3JpcHQ+XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgbmFtZTogJ0VkdUhlbGxvV29ybGQnLFxuICAgIGRhdGEgKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbXNnOiAnV2VsY29tZSB0byBZb3VyIFZ1ZS5qcyBBcHAnXG4gICAgICAgIH1cbiAgICB9XG59O1xuPC9zY3JpcHQ+XG5cbjwhLS0gQWRkIFwic2NvcGVkXCIgYXR0cmlidXRlIHRvIGxpbWl0IENTUyB0byB0aGlzIGNvbXBvbmVudCBvbmx5IC0tPlxuPHN0eWxlIHNjb3BlZD5cbiAgICAuaGVsbG8ge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCBibHVlO1xuICAgIH1cbjwvc3R5bGU+IiwiPHRlbXBsYXRlIGZ1bmN0aW9uYWw+XG4gICAgPGRpdj5cbiAgICAgICAgPGgzPnt7IGhlYWRpbmcgfX08L2gzPlxuICAgICAgICA8cD57eyBzdWJoZWFkaW5nIH19PC9wPlxuICAgIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbjxzY3JpcHQ+XG4gICAgZXhwb3J0IGRlZmF1bHQge1xuICAgICAgICBuYW1lOiBcIkVkdUhlYWRpbmdHcm91cFwiLFxuICAgICAgICBwcm9wczogW1wiaGVhZGluZ1wiLCBcInN1YmhlYWRpbmdcIl1cbiAgICB9O1xuPC9zY3JpcHQ+XG48c3R5bGUgc2NvcGVkPlxuICAgIGgzIHtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICB9XG48L3N0eWxlPiIsIlxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cbi5zbGlkZS1lbnRlci1hY3RpdmUsXG4uc2xpZGUtbGVhdmUtYWN0aXZlIHtcbiAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC41cyBlYXNlLWluLW91dDtcbn1cbi5zbGlkZS1lbnRlciB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0xMDB2dyk7XG59XG4uc2xpZGUtbGVhdmUtdG8ge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgxMDB2dyk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9*/