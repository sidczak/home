{% extends 'base.html.twig' %}
{% block title %}{{title}}{% endblock %}

{% block body %}
    {#{{ show_source_code(_self) }}#}
        
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="mt-3">
                    <h2>Example 31</h2>

                    <div id="app">
                        <h4>Player</h4>
                        <div class="row justify-content-center">
                            <div class="col-8">
                                <video class="img-fluid" src="https://code.eduweb.pl/kurs-vue/media/video.mp4" ref="video" v-volume="volume"></video>
                                <button class="btn btn-primary" v-text="isPlaying ? 'Pause' : 'Play'" @click="playPause"></button>
                            </div>
                        </div>
                    </div>

                    <pre>
                        <code>$0.volume</code>
                    </pre>

                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block stylesheets %}{% endblock %}
{% block javascripts %}{% endblock %}
{% block javascriptsvue %}
    {{ include('VueBundle:VueBasic:_vueScript.html.twig') }}
    {#<script src="{{ asset('js/vue/quick-start.vue.js') }}"></script>#}
    <script>
        // Vue.directive(volume, {
        //     inserted: function(el, binding) {
        //         el.volume = binding.value;
        //     },
        //     updated: function(el, binding) {
        //         el.volume = binding.value;
        //     }
        // });
        new Vue({
            el: "#app",
            data: {
                isPlaying: false,
                volume: 1
            },
            methods: {
                playPause: function() {
                    var video = this.$refs.video;
                    if(video.paused) {
                        video.play();
                        this.isPlaying = true;
                    }
                    else {
                        video.pause();
                        this.isPlaying = false;
                    }
                }
            },
            directives: {
                volume: function(el, binding) {
                    el.volume = binding.value;
                }
            }
        });
    </script>
{% endblock %}